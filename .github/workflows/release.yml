# .github/workflows/release.yml
# GitHub Actions workflow for building and releasing IAM Role Cloner

name: Release

on:
  push:
    tags:
      - "v*.*.*" # Triggers on version tags like v1.0.0, v1.2.3, etc.
  workflow_dispatch: # Allows manual triggering

env:
  GO_VERSION: "1.21"

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history for git describe

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Get version info
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(git describe --tags --always --dirty)
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "git_commit=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "build_date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Build binaries
        run: |
          mkdir -p build

          # Set build variables
          LDFLAGS="-s -w"
          LDFLAGS="$LDFLAGS -X 'iam-role-cloner/cmd.Version=${{ steps.version.outputs.version }}'"
          LDFLAGS="$LDFLAGS -X 'iam-role-cloner/cmd.GitCommit=${{ steps.version.outputs.git_commit }}'"
          LDFLAGS="$LDFLAGS -X 'iam-role-cloner/cmd.BuildDate=${{ steps.version.outputs.build_date }}'"

          # Build for multiple platforms
          GOOS=linux GOARCH=amd64 go build -ldflags "$LDFLAGS" -o build/iam-role-cloner-linux-amd64 .
          GOOS=linux GOARCH=arm64 go build -ldflags "$LDFLAGS" -o build/iam-role-cloner-linux-arm64 .
          GOOS=darwin GOARCH=amd64 go build -ldflags "$LDFLAGS" -o build/iam-role-cloner-darwin-amd64 .
          GOOS=darwin GOARCH=arm64 go build -ldflags "$LDFLAGS" -o build/iam-role-cloner-darwin-arm64 .
          GOOS=windows GOARCH=amd64 go build -ldflags "$LDFLAGS" -o build/iam-role-cloner-windows-amd64.exe .
          GOOS=windows GOARCH=arm64 go build -ldflags "$LDFLAGS" -o build/iam-role-cloner-windows-arm64.exe .

      - name: Create packages
        run: |
          mkdir -p packages
          cd build

          # Create tar.gz for Unix systems
          tar -czf ../packages/iam-role-cloner-${{ steps.version.outputs.version }}-linux-amd64.tar.gz iam-role-cloner-linux-amd64
          tar -czf ../packages/iam-role-cloner-${{ steps.version.outputs.version }}-linux-arm64.tar.gz iam-role-cloner-linux-arm64
          tar -czf ../packages/iam-role-cloner-${{ steps.version.outputs.version }}-darwin-amd64.tar.gz iam-role-cloner-darwin-amd64
          tar -czf ../packages/iam-role-cloner-${{ steps.version.outputs.version }}-darwin-arm64.tar.gz iam-role-cloner-darwin-arm64

          # Create zip for Windows
          zip ../packages/iam-role-cloner-${{ steps.version.outputs.version }}-windows-amd64.zip iam-role-cloner-windows-amd64.exe
          zip ../packages/iam-role-cloner-${{ steps.version.outputs.version }}-windows-arm64.zip iam-role-cloner-windows-arm64.exe

      - name: Generate checksums
        run: |
          cd packages
          sha256sum * > checksums.txt
          cat checksums.txt

      - name: Generate release notes
        id: release_notes
        run: |
          cat > release_notes.md << 'EOF'
          ## 🚀 IAM Role Cloner ${{ steps.version.outputs.version }}

          A powerful CLI tool to clone IAM roles between AWS environments with pattern replacement.

          ### 📦 Installation

          #### Quick Install (Linux/macOS)
          ```bash
          # Linux (AMD64)
          curl -L -o iam-role-cloner https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/iam-role-cloner-linux-amd64
          chmod +x iam-role-cloner
          sudo mv iam-role-cloner /usr/local/bin/

          # macOS (AMD64)
          curl -L -o iam-role-cloner https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/iam-role-cloner-darwin-amd64
          chmod +x iam-role-cloner
          sudo mv iam-role-cloner /usr/local/bin/

          # macOS (Apple Silicon)
          curl -L -o iam-role-cloner https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/iam-role-cloner-darwin-arm64
          chmod +x iam-role-cloner
          sudo mv iam-role-cloner /usr/local/bin/
          ```

          #### Windows
          Download the appropriate `.zip` file below and extract it to a directory in your PATH.

          ### ✨ Features
          - 🔄 Clone IAM roles between AWS accounts/profiles
          - 🔧 Pattern replacement in role names and policy content
          - 🧪 Dry-run mode for safe testing
          - 📝 Comprehensive logging with colored output
          - 🔍 Role discovery and filtering
          - 🏷️ Tag management with environment updates

          ### 🎯 Quick Start
          ```bash
          # Interactive mode
          iam-role-cloner clone

          # List roles
          iam-role-cloner list --profile dev

          # Dry run
          iam-role-cloner clone --dry-run --verbose
          ```

          ### 📊 Build Info
          - **Version**: ${{ steps.version.outputs.version }}
          - **Git Commit**: ${{ steps.version.outputs.git_commit }}
          - **Build Date**: ${{ steps.version.outputs.build_date }}
          - **Go Version**: ${{ env.GO_VERSION }}

          ### 🔒 Verification
          All binaries include embedded version information. Verify with:
          ```bash
          iam-role-cloner version --detailed
          ```

          ### 📋 Checksums
          Verify file integrity using the `checksums.txt` file included in this release.
          EOF

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Release ${{ steps.version.outputs.version }}
          body_path: release_notes.md
          files: |
            build/iam-role-cloner-linux-amd64
            build/iam-role-cloner-linux-arm64
            build/iam-role-cloner-darwin-amd64
            build/iam-role-cloner-darwin-arm64
            build/iam-role-cloner-windows-amd64.exe
            build/iam-role-cloner-windows-arm64.exe
            packages/iam-role-cloner-${{ steps.version.outputs.version }}-linux-amd64.tar.gz
            packages/iam-role-cloner-${{ steps.version.outputs.version }}-linux-arm64.tar.gz
            packages/iam-role-cloner-${{ steps.version.outputs.version }}-darwin-amd64.tar.gz
            packages/iam-role-cloner-${{ steps.version.outputs.version }}-darwin-arm64.tar.gz
            packages/iam-role-cloner-${{ steps.version.outputs.version }}-windows-amd64.zip
            packages/iam-role-cloner-${{ steps.version.outputs.version }}-windows-arm64.zip
            packages/checksums.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
